### List all known topics in the kafka cluster (e.g. on kubernetes master) ###
# kubectl exec --namespace <namespace_of_kafka> -it <kafka_pod_name> -- /opt/kafka/bin/kafka-topics.sh --zookeeper <zookeeper_endpoint> --list
# --zookeeper 10.240.1.171
# --zookeeper 10.240.1.160,10.240.1.171,10.240.1.68

kubectl exec --namespace messaging -it kafka-0 -- /opt/kafka/bin/kafka-topics.sh --zookeeper zookeeper-client:2181 --list

# Example Output #
__consumer_offsets
device.attributesReceived
device.configurationReceived
device.created
device.deleted
device.diagnosticsGenerated
device.eventReceived
device.rawDataReceived
device.rawEventReceived
device.requestActionSend
device.requestActionSent
device.requestConfigurationSet
device.timeseriesValueReceived
tenant.created
tenant.deleted
tenant.updated
#############################################################
### Check status of any topic (e.g. on kubernetes master) ###
#############################################################

# kubectl exec --namespace <namespace_of_kafka> -it <kafka_pod_name> -- /opt/kafka/bin/kafka-topics.sh --zookeeper <zookeeper_endpoint> --describe --topic <topic_name>

kubectl exec --namespace messaging -it kafka-0 -- /opt/kafka/bin/kafka-topics.sh --zookeeper zookeeper-client:2181 --describe --topic device.deleted

# You can also avoid --topic to list all topic's status

kubectl exec --namespace messaging -it kafka-0 -- /opt/kafka/bin/kafka-topics.sh --zookeeper zookeeper-client:2181 --describe

# Example Output #
# what we can see here is that there are 4 partitions (PartitionCount:4) which are shards of the whole data set
# we have no replication (ReplicationFactor:1) and therefore no real high-availability
# the partitions 0 & 3 are on kafka node 1, the patition 1 is on kafka-2
# the partition 2 has no instance and therefore no leader, too, this needs to be fixed
# can be fixed by restarting the kafka node (here kafka-0)
